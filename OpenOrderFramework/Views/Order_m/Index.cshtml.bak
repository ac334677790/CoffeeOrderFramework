@*@model IEnumerable<openorderframework.models.order_m>*@
@using PagedList.Mvc
@model OpenOrderFramework.ViewModels.Order_mListViewModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@Resources.Common.Index</h2>

<div class="well">
    @using (Html.BeginForm("Index", "Order_m",
        FormMethod.Post,
        new { @class = "form-horizontal", role = "form", id = "PageList" }))
    {
        <div class="row">
            <div class="col-md-6 form-group">
                @*<label class="col-lg-3 control-label">Product Name:</label>*@
                @Html.LabelFor(x => x.Order_ms.FirstOrDefault().OrderNo, new { @class = "col-lg-3 control-label" })
                <div class="col-lg-8">
                    @Html.EditorFor(x => x.SearchParameter.OrderNo, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
            <div class="col-md-6 form-group">
                @*<label class="col-lg-3 control-label">Quantity Per Unit:</label>*@
                @Html.LabelFor(x => x.Order_ms.FirstOrDefault().OrderDateTime, new { @class = "col-lg-3 control-label" })
                <div class="col-lg-8">
                    @Html.EditorFor(x => x.SearchParameter.OrderDateTime, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
            <div class="col-md-6 form-group">
                @*<label class="col-lg-3 control-label">Quantity Per Unit:</label>*@
                @Html.LabelFor(x => x.Order_ms.FirstOrDefault().CustomerID, new { @class = "col-lg-3 control-label" })
                <div class="col-lg-8">
                    @Html.EditorFor(x => x.SearchParameter.CustomerID, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
            <div class="col-md-6 form-group">
                @*<label class="col-lg-3 control-label">Quantity Per Unit:</label>*@
                @Html.LabelFor(x => x.Order_ms.FirstOrDefault().CustName, new { @class = "col-lg-3 control-label" })
                <div class="col-lg-8">
                    @Html.EditorFor(x => x.SearchParameter.CustName, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            <div class="col-md-6 form-group">
                @*<label class="col-lg-3 control-label">Quantity Per Unit:</label>*@
                @Html.LabelFor(x => x.Order_ms.FirstOrDefault().DataStatus, new { @class = "col-lg-3 control-label" })
                <div class="col-lg-8">
                    @Html.DropDownListFor(x => x.SearchParameter.DataStatus, (SelectList)Model.DataStatuses, "-- select item --", new { @class = "form-control" })
                </div>
            </div>
        </div>
        <div class="row">
            @*<div class="col-md-6 form-group">
                    <label class="col-lg-3 control-label">Supplier:</label>
                    <div class="col-lg-8">
                        @Html.DropDownListFor(x => x.SearchParameter.Supplier, (SelectList)Model.Suppliers, "-- select item --", new { @class = "form-control" })
                    </div>
                </div>*@
        </div>
        <span class="clearfix"></span>
        <div class="row">
            <div class="col-md-offset-5">
                <input type="submit" class="btn btn-primary" value=@Resources.Common.Search>
                <span></span>
                <input type="reset" class="btn btn-default" value=@Resources.Common.Cancel>
            </div>
        </div>
    }
</div>
@Html.PagedListPager(Model.Order_ms,
    page => Url.Action("Index", new { page }),
    PagedListRenderOptions.ClassicPlusFirstAndLast)

<p>
    @Html.ActionLink(Resources.Common.Create, "Create")
</p>
<table class="table">
    <tr>
        <th></th>
        <th>
            @Html.DisplayNameFor(model => model.Order_ms.FirstOrDefault().DataStatus)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Order_ms.FirstOrDefault().OrderDateTime)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Order_ms.FirstOrDefault().DeliveryDateTime)
        </th>

        @*<th>
                @Html.DisplayNameFor(model => model.Order_ms.FirstOrDefault().CustomerID)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Order_ms.FirstOrDefault().CustName)
            </th>*@
        @*<th>
                @Html.DisplayNameFor(model => model.Order_ms.FirstOrDefault().FaxNumber)
            </th>*@
        <th>
            @Html.DisplayNameFor(model => model.Order_ms.FirstOrDefault().ContactName)
        </th>
        @*<th>
                @Html.DisplayNameFor(model => model.Order_ms.FirstOrDefault().TelephoneNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Order_ms.FirstOrDefault().MobileNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Order_ms.FirstOrDefault().Email)
            </th>*@
        <th>
            @Html.DisplayNameFor(model => model.Order_ms.FirstOrDefault().PayKind)
        </th>
        <th>
            總計
        </th>
        @*<th>
                @Html.DisplayNameFor(model => model.Order_ms.FirstOrDefault().DeliveryAddress)
            </th>*@
        <th>
            @Html.DisplayNameFor(model => model.Order_ms.FirstOrDefault().CheckUserID)
        </th>
        @*<th>
                @Html.DisplayNameFor(model => model.Order_ms.FirstOrDefault().PayAccount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Order_ms.FirstOrDefault().AppleyAccount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Order_ms.FirstOrDefault().AccountNAME)
            </th>*@
        <th>
            @Html.DisplayNameFor(model => model.Order_ms.FirstOrDefault().Promotional)
        </th>

        <th>
            @Html.DisplayNameFor(model => model.Order_ms.FirstOrDefault().Memo)
        </th>
        @*<th>
                @Html.DisplayNameFor(model => model.Order_ms.FirstOrDefault().DeliveryUserID)
            </th>*@
        @*<th>
                @Html.DisplayNameFor(model => model.Order_ms.FirstOrDefault().CreateUserID)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Order_ms.FirstOrDefault().CreateDateTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Order_ms.FirstOrDefault().ModifyUserID)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Order_ms.FirstOrDefault().ModifyDateTime)
            </th>*@
        <th></th>
    </tr>

    @*明細*@
    @*<tr>
            <th>
                @Html.DisplayNameFor(model => model.Order_ds.FirstOrDefault().OrderSeq)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Order_ds.FirstOrDefault().ProdName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Order_ds.FirstOrDefault().ProdSpec)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Order_ds.FirstOrDefault().OrderStatus)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Order_ds.FirstOrDefault().EndCode_YN)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Order_ds.FirstOrDefault().CostPrice)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Order_ds.FirstOrDefault().Discount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Order_ds.FirstOrDefault().ProdUnit)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Order_ds.FirstOrDefault().Qty)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Order_ds.FirstOrDefault().UnitPrice)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Order_ds.FirstOrDefault().Total)
            </th>


            <th>
                @Html.DisplayNameFor(model => model.Order_ds.FirstOrDefault().Temperature)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Order_ds.FirstOrDefault().Sugar)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Order_ds.FirstOrDefault().Size)
            </th>


            <th>
                @Html.DisplayNameFor(model => model.Order_ds.FirstOrDefault().Memo)
            </th>
            <th></th>
        </tr>*@


    @foreach (var item in Model.Order_ms)
    {
        decimal total = 0;
        foreach (var item_d in Model.Order_ds)
        {
            if (item_d.OrderNo == item.OrderNo)
            {
                total += item_d.Total;
            }
        }
        <tr>
            <td>
                @Html.ActionLink(Resources.Common.Create, "../order_d/Create", new { id = item.CompanyID + ',' + @item.OrderNo }) |
                @Html.ActionLink(Resources.Common.Edit, "Edit", new { id = item.CompanyID + ',' + @item.OrderNo }) |
                @Html.ActionLink(Resources.Common.Delete, "Delete", new { id = item.CompanyID + ',' + @item.OrderNo }) |
                @Html.ActionLink(Resources.Common.Details, "Details", new { id = item.CompanyID + ',' + @item.OrderNo })
            </td>
            <td>
                @if (@Model.CodeDataStatus.ContainsKey(item.DataStatus))
                {@Model.CodeDataStatus[item.DataStatus] }
                else
                {@Html.DisplayFor(modelItem => item.DataStatus)}
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.OrderDateTime)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DeliveryDateTime)
            </td>
            @*<td>
                    @Html.DisplayFor(modelItem => item.CustomerID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CustName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FaxNumber)
                </td>*@
            <td>
                @Html.DisplayFor(modelItem => item.ContactName)
            </td>
            @*<td>
                    @Html.DisplayFor(modelItem => item.TelephoneNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MobileNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>*@
            <td>
                @if (@Model.CodePayment.ContainsKey(item.PayKind))
                {@Model.CodePayment[item.PayKind] }
                else
                {@Html.DisplayFor(modelItem => item.PayKind)}
            </td>
            <td>@total</td>
            @*<td>
                    @Html.DisplayFor(modelItem => item.DeliveryAddress)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CheckUserID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PayAccount)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AppleyAccount)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AccountNAME)
                </td>*@
            <td>
                @Html.DisplayFor(modelItem => item.Promotional)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Memo)
            </td>

            @*
                <td>
                    @Html.DisplayFor(modelItem => item.DeliveryUserID)
                </td>*@

            @*<td>
                    @Html.DisplayFor(modelItem => item.CreateUserID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CreateDateTime)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ModifyUserID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ModifyDateTime)
                </td>*@
        </tr>


        @*明細*@

        @*decimal total = 0;
                        foreach (var item_d in Model.Order_ds)
                        {
                            if (item_d.OrderNo == item.OrderNo)
                            {
                                total += item_d.Total;
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item_d.OrderSeq)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item_d.ProdName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item_d.ProdSpec)
                    </td>
                    <td>
                        @if (@Model.CodeOrderStatus.ContainsKey(item_d.OrderStatus))
                        {@Model.CodeOrderStatus[item_d.OrderStatus] }
                        else
                        {@Html.DisplayFor(modelItem => item_d.OrderStatus)}
                    </td>
                    <td>
                        @if (@Model.CodeEndCode.ContainsKey(item_d.EndCode_YN))
                        {@Model.CodeEndCode[item_d.EndCode_YN] }
                        else
                        {@Html.DisplayFor(modelItem => item_d.EndCode_YN)}
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item_d.CostPrice)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item_d.Discount)
                    </td>
                    <td>
                        @if (@Model.CodeUnit.ContainsKey(item_d.ProdUnit))
                        {@Model.CodeUnit[item_d.ProdUnit] }
                        else
                        {@Html.DisplayFor(modelItem => item_d.ProdUnit)}
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item_d.Qty)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item_d.UnitPrice)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item_d.Total)
                    </td>
                    <td>
                        @if (@Model.CodeTemperature.ContainsKey(item_d.Temperature))
                        {@Model.CodeTemperature[item_d.Temperature] }
                        else
                        {@Html.DisplayFor(modelItem => item_d.Temperature)}
                    </td>
                    <td>
                        @if (@Model.CodeSugar.ContainsKey(item_d.Sugar))
                        {@Model.CodeSugar[item_d.Sugar] }
                        else
                        {@Html.DisplayFor(modelItem => item_d.Sugar)}
                    </td>
                    <td>
                        @if (@Model.CodeSize.ContainsKey(item_d.Size))
                        {@Model.CodeSize[item_d.Size] }
                        else
                        {@Html.DisplayFor(modelItem => item_d.Size)}
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item_d.Memo)
                    </td>
                    <td>
                        @Html.ActionLink(Resources.Common.Edit, "../Order_d/Edit", new { id = item_d.CompanyID + ',' + @item_d.OrderNo }) |
                        @Html.ActionLink(Resources.Common.Details, "../Order_d/Details", new { id = item_d.CompanyID + ',' + @item_d.OrderNo }) |
                        @Html.ActionLink(Resources.Common.Delete, "../Order_d/Delete", new { id = item_d.CompanyID + ',' + @item_d.OrderNo })
                    </td>
                </tr>
                }
            }*@

        <tr>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td>
                @*@total*@
            </td>
        </tr>
    }
</table>
    @section scripts
{
        <script type="text/javascript">
            $(function () {
                $('.pagination>li>a[href]').each(function (i, item) {
                    var page = $(item).attr('href').replace('/Order_m?page=', '');
                    $(item).attr('href', '#').click(function () { postPage(page); });

                });

                //設定刷新
                //var myVar = setInterval(myTimer, 1000);


            });

            function postPage(page) {
                var targetFormId = '#PageList';
                if ($(targetFormId).size() > 0) {
                    $('<input>')
                        .attr({ type: 'hidden', id: 'PageIndex', name: 'PageIndex', value: page })
                        .appendTo($(targetFormId));
                    $(targetFormId).submit();
                }
            };


            function myTimer() {
                var d = new Date();
                document.getElementById("demo").innerHTML = d.toLocaleTimeString();
            }
        </script>
    }
