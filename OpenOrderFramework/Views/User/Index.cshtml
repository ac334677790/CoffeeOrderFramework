@*@model IEnumerable<OpenOrderFramework.Models.User>*@
@using PagedList.Mvc
@model OpenOrderFramework.ViewModels.UserListViewModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div style="text-align:center;display:inline">
    <h2>@ViewBag.ProgramName <small>@Resources.Common.Index</small></h2>
</div>
<div class="well" id="Search">
    @using (Html.BeginForm("Index", "User",
        FormMethod.Post,
        new { @class = "form-horizontal", role = "form", id = "PageList" }))
    {
        <div class="row">
            <div class="col-md-12 form-group">
                @*<label class="col-lg-3 control-label">Product Name:</label>*@
                @Html.LabelFor(x => x.Users.FirstOrDefault().UserID, new { @class = "col-lg-5 control-label" })
                <div class="col-lg-7">
                    @Html.EditorFor(x => x.SearchParameter.UserID, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
            @*<div class="col-md-6 form-group">
                    <label class="col-lg-3 control-label">Quantity Per Unit:</label>
                    <div class="col-lg-8">
                        @Html.EditorFor(x => x.SearchParameter.ProdSpec, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>*@
        </div>
        <span class="clearfix"></span>
        <div class="row">
            <div class="col-md-offset-2">
                <input type="reset" class="btn btn-default" value=@Resources.Common.Cancel>
                <span></span>
                <input type="submit" class="btn btn-primary" value=@Resources.Common.Search>
            </div>
        </div>
    }
</div>

<table class="table">
    <thead>
        <tr id="sticker">
            <th>

                <div class="btn-group" role="group" aria-label="...">

                    @Html.ActionLink(Resources.Common.Create, "Create", "", new { @class = "fancybox fancybox.iframe btn btn-default btn-group btn-sm", role = "group" })
                    <a class="fancybox btn btn-default btn-group btn-sm" href="#Search">查詢</a>

                </div>
            </th>
        </tr>
        <tr>
            <td>
                @Html.PagedListPager(Model.Users,
    page => Url.Action("Index", new { page }),
    PagedListRenderOptions.ClassicPlusFirstAndLast)


            </td>
        </tr>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Users.FirstOrDefault().CompanyID)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Users.FirstOrDefault().UserID)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Users.FirstOrDefault().UserPassword)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Users.FirstOrDefault().EmpID)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Users.FirstOrDefault().Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Users.FirstOrDefault().Memo)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Users.FirstOrDefault().InValidDate)
            </th>
            @*<th>
                    @Html.DisplayNameFor(model => model.CreateUserID)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CreateDateTime)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ModifyUserID)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ModifyDateTime)
                </th>*@
            <th></th>
        </tr>

    </thead>
@foreach (var item in Model.Users) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.CompanyID)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.UserID)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.UserPassword)
        </td>
        <td>
            @if (@Model.Employees.ContainsKey(item.EmpID))
            {@Model.Employees[item.EmpID] }
            else
            {@Html.DisplayFor(modelItem => item.EmpID)}
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Email)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Memo)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.InValidDate)
        </td>
        @*<td>
            @Html.DisplayFor(modelItem => item.CreateUserID)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CreateDateTime)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ModifyUserID)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ModifyDateTime)
        </td>*@
        <td>
            @Html.ActionLink(Resources.Common.Edit, "Edit", new { id = item.CompanyID + ',' + @item.UserID }) |
            @Html.ActionLink(Resources.Common.Details, "Details", new { id = item.CompanyID + ',' + @item.UserID }) |
            @Html.ActionLink(Resources.Common.Delete, "Delete", new {  id=item.CompanyID + ',' + @item.UserID  })
        </td>
    </tr>
}

</table>
@section scripts
{
    <script type="text/javascript">
        $(function () {
            $('.pagination>li>a[href]').each(function (i, item) {
                var page = $(item).attr('href').replace('/User?page=', '');
                $(item).attr('href', '#').click(function () { postPage(page); });

            });
            $('.fancybox').fancybox({ 'width': "80%" });
        });

        function postPage(page) {
            var targetFormId = '#PageList';
            if ($(targetFormId).size() > 0) {
                $('<input>')
                    .attr({ type: 'hidden', id: 'PageIndex', name: 'PageIndex', value: page })
                    .appendTo($(targetFormId));
                $(targetFormId).submit();
            }
        };
    </script>
}
